- content_for :title do
  Settings
- content_for :scripts do
  %script{src:"/js/application.js"}
  %script{src:"/js/profile.js"}
  :javascript
    $(function() {
      Application.init(#{@admin_user.id}, "PUT", "/admin", "#{@admin_user.identifier}");
      Profile.init("/admin/user/#{@admin_user.identifier}");
    });

.row
  = haml :'partials/admin/jumbotron', layout: false, locals: { active_page: "settings" }
  .col-12.col-lg-8.mt-2
    = haml :'partials/admin/user_tabs', layout: false, locals: { active_page: nil }

    - if flash[:updated]
      .alert.alert-success.alert-dismissible.fade.show.d-block{role: "alert"}
        %div
          User was updated.
        %button.close{type:"button", "data-dismiss":"alert", "aria-label":"Close"}
          %span{"aria-hidden":"true"} &times;

    .citation-wrapper.mt-3
      %h4 Settings
      .card-deck
        .card
          %h5.card-header Public Availability
          .card-body
            %p.card-text
              Include the account in public
              = succeed "." do
                %a{href: url("/roster")} Profiles
            .row
              .col
                %input.btn-claim#toggle-public{type:"checkbox", "data-toggle":"toggle", "data-on":"Public", "data-off":"Private", "data-onstyle": "success", "data-size": "small", checked: @admin_user.is_public?, "data-url": "/admin/user/#{@admin_user.identifier}/visibility.json" }
              .col.text-right
                - if @admin_user.is_public?
                  %a{href: url("/#{@admin_user.identifier}"), target: "_blank"}
                    Public Profile
                    %i.fas.fa-external-link-alt

        .card
          %h5.card-header Citable Claims
          .card-body
            - if !@admin_user.zenodo_access_token.empty?
              %p.card-text
                User has created a link to Zenodo
            - else
              %p.card-text
                User has not yet created a link to Zenodo
            - if @admin_user.zenodo_concept_doi
              %p
                %a{href:"https://doi.org/#{@admin_user.zenodo_concept_doi}"}
                  %img{src:"/images/#{@admin_user.zenodo_concept_doi}.svg"}

      .card-deck
        .card
          %h5.card-header
            - if @admin_user.orcid
              %i.fab.fa-orcid
              ORCID
            - else
              %img{src:"/images/wikidata_24x24.png", alt: "Wikidata"}
              Wikidata
          .card-body
            %p.card-text Pull new updates to name, aliases, keywords, country, education, and employment from the ORCID account or other items if from Wikidata.
            %p
              %a.btn.btn-sm.btn-outline-success.profile-flush{href: url("/#{@admin_user.identifier}/refresh.json"), role:"button"}
                %i.fas.fa-sync-alt
                Refresh
                - if @admin_user.orcid
                  %i.fab.fa-orcid
                - else
                  %img{src: "/images/wikidata_24x24.png", alt:"Wikidata iD", width:"18px"}

            #refresh-message.alert.alert-success.alert-dismissible.fade.show.text-center{role: "alert"}
              - source = @admin_user.orcid ? "ORCID" : "Wikidata"
              Data from #{source} were refreshed.
              %button.close{type:"button", "data-dismiss":"alert", "aria-label":"Close"}
                %span{"aria-hidden":"true"} &times;

        .card
          %h5.card-header Email Notifications
          .card-body
            %p.card-text
              - if @admin_user.wants_mail?
                Subscribed with email address,
                %strong #{@admin_user.email}
              - else
                Not subscribed.

      .card-deck
        .card
          %h5.card-header
            YouTube
          .card-body
            %p.card-text
              Use a YouTube ID for a video to appear in the profile.
            - if !@admin_user.orcid.nil?
              %form{action: "/admin/user/#{@admin_user.id}", method: :post}
                %input{type: :hidden, name: "_method", value: 'PUT'}
                %input{type: :hidden, name:"authenticity_token", value:"#{env['rack.session'][:csrf]}"}
                %input.form-control.mb-3#youtube_id{type: "text", name: "youtube_id", value: "#{@admin_user.youtube_id}"}
                %input.btn.btn-sm.btn-outline-success{type: :submit, value:"Update"}

        .card
          %h5.card-header
            Deceased Redirect
          .card-body
            %p.card-text
              Use a wikidata Q number instead of ORCID when user has recently passed away. Requires that user currently has an ORCID and an existing, valid wikidata Q number with all necessary data.
            - if !@admin_user.orcid.nil?
              %form{action: "/admin/user/#{@admin_user.id}/deceased", method: :post}
                %input{type: :hidden, name: "_method", value: 'PUT'}
                %input{type: :hidden, name:"authenticity_token", value:"#{env['rack.session'][:csrf]}"}
                %input.form-control.mb-3#wikidata{type: "text", name: "wikidata"}
                %input.btn.btn-sm.btn-outline-success{type: :submit, value:"Update"}

      .card-deck
        .card
          %h5.card-header
            Delete Account
          .card-body
            %p.card-text Permanently delete the account.
            %button.btn.btn-sm.btn-outline-danger{type: "button", "data-toggle": "modal", "data-target": "#deleteModal"} Delete

          #deleteModal.modal.fade{tabindex:"-1", role:"dialog", "aria-labelledby":"deleteModal", "aria-hidden":"true"}
            .modal-dialog{role:"document"}
              .modal-content
                .modal-header
                  %h5.modal-title#deleteLabel Delete Account
                  %button.close{type:"button", "data-dismiss":"modal", "aria-label":"Close"}
                    %span{"aria-hidden":"true"} &times;
                .modal-body
                  Are you sure you want to delete this your account? It will be added to an ignore list and cannot be recreated.
                .modal-footer
                  %form{action: "/admin/user/#{@admin_user.id}", method: :post}
                    %button.btn.btn-sm.btn-outline-secondary{type:"button", "data-dismiss":"modal"} Cancel
                    %input{type: :hidden, name: "_method", value: 'DELETE'}
                    %input{type: :hidden, name:"authenticity_token", value:"#{env['rack.session'][:csrf]}"}
                    %input.btn.btn-sm.btn-outline-danger{type: :submit, value:"Delete"}

        .card.border-0
