- content_for :title, I18n.t('dataset.search_title')
- content_for :scripts do
  :javascript
    $(function() {
      Application.init();
    });

- content_for :jumbotron do
  .jumbotron.jumbotron-fluid.d-flex.flex-wrap
    .mr-auto.p-2
      %h1.h2
        = I18n.t('dataset.dataset_title')
      %p.lead.text-muted
        #{number_to_human(Dataset.count, units: :'dataset.lede', delimiter: ",", precision: 0)}
    = haml :'partials/dataset/search', layout: false

- if @pagy && @pagy.count == 0
  .alert.alert-warning.tiny-margins.d-flex.flex-wrap{role: "alert"}
    %div
      = I18n.t('dataset.none_found', searched: h(params[:q]))
    .ml-auto.text-right
      %a.text-danger{href: url("/datasets")}
        %i.fas.fa-minus-circle
        #{I18n.t('general.remove')}
- elsif @pagy && @pagy.count > 0
  .alert.alert-info.tiny-margins.d-flex.flex-wrap{role: "alert"}
    %div
      #{number_to_human(@pagy.count, units: :'dataset.search_found', delimiter: ",", precision: 0)}
      %span #{h(params[:q])}
    .ml-auto.text-right
      %a.text-danger{href: url("/datasets")}
        %i.fas.fa-minus-circle
        #{I18n.t('general.remove')}

  - @results.each do |d|
    - dataset = Dataset.find(d[:_id].to_i) rescue nil
    - if !dataset.nil?
      .mt-4.mb-4
        %h5.mb-1
          = link_to dataset.title, url("/dataset/#{dataset.uuid}")

        - if d[:highlight].has_key?(:description)
          - d[:highlight][:description].compact.each do |highlight|
            .small.text-muted-pl-2.ml-2
              &hellip;#{highlight}&hellip;

        %p.small.text-muted.mb-0
          %img{src:"#{dataset.license_icon("small")}"}
        %p.small.text-muted.mt-0
          %span.badge.badge-light #{number_with_delimiter(d[:_source][:users_count])}
          #{'person'.pluralize(d[:_source][:users_count])}

  - if @pagy.pages > 1
    .overflow-auto
      = pagy_bootstrap_nav(@pagy)
