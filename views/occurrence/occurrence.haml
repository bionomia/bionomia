- content_for :title, I18n.t('occurrence.occurrence_title')
- content_for :scripts do
  %script{src: "//www.gstatic.com/charts/loader.js"}
  %script{src: "/js/jquery.throttledresize.js"}
  %script{src: "/js/occurrence_widget.js"}
  :javascript
    $(function () {
      var map;

      Application.init();
      OccurrenceWidget.init($('#selector-template'), #{@network}, #{@ignored});

      if (!$('#map').length) { return; }

      function drawVisualizations() {
        var options = {
          displayMode: 'markers',
          colorAxis: { colors: ['white'] },
          tooltip: { trigger: 'none'}
        };

        var data = google.visualization.arrayToDataTable([
          ['Lat', 'Long', 'Name'],
          [#{format_coordinate(@occurrence.decimalLatitude)}, #{format_coordinate(@occurrence.decimalLongitude)}, "#{@occurrence.scientificName}"]
        ]);

        map = new google.visualization.GeoChart($('#map')[0]);
        map.draw(data, options);
      }

      google.charts.load('current', {
        packages: ['corechart','geochart'],
        mapsApiKey: "#{Settings.google.api_key}"
      });
      google.charts.setOnLoadCallback(drawVisualizations);

      $(window).on("throttledresize", function(event) {
        map.clearChart();
        drawVisualizations();
        $("#map-wrapper").height(map.container.offsetHeight);
      });

    });

- content_for :jumbotron do
  .jumbotron.jumbotron-fluid.d-flex.flex-wrap
    .mr-auto.p-2
      %h1.h2= I18n.t('occurrence.occurrence_title')
      %p.lead.text-muted= I18n.t('occurrence.lede')

.card-deck.occurrence.mt-4

  #record.card.mb-4
    .card-header.border-bottom
      %h5= I18n.t('occurrence.record')
    .card-body.mt-2
      %dl.dl-horizontal
        %dt gbifID
        %dd.py-1
          %a{href: gbif_occurrence_url(@occurrence.id), target:"_blank"}
            #{@occurrence.id}
            %i.fas.fa-external-link-alt
        %dd.line-break

        %dt datasetKey
        %dd.py-1
          - if @occurrence.datasetKey
            %a{href: "https://gbif.org/dataset/#{@occurrence.datasetKey}", target:"_blank"}
              #{@occurrence.datasetKey}
              %i.fas.fa-external-link-alt
        %dd.line-break

        %dt occurrenceID
        %dd.py-1
          - if @occurrence.occurrenceID && @occurrence.occurrenceID[0..3] == "http"
            %a{href: "#{@occurrence.occurrenceID}", target:"_blank"} #{@occurrence.occurrenceID}
          - else
            #{h(@occurrence.occurrenceID)}
        %dd.line-break

        %dt institutionCode
        %dd.py-1 #{h(@occurrence.institutionCode)}
        %dd.line-break

        %dt collectionCode
        %dd.py-1 #{h(@occurrence.collectionCode)}
        %dd.line-break

        %dt catalogNumber
        %dd.py-1 #{h(@occurrence.catalogNumber)}
        %dd.line-break

        %dt basisOfRecord
        %dd.py-1 #{h(@occurrence.basisOfRecord)}
        %dd.line-break

        %dt license
        %dd.py-1
          = format_license(@occurrence.license)
        %dd.line-break

        %dt #{I18n.t('occurrence.has_image')}
        %dd.py-1
          #{I18n.t(@occurrence.hasImage.present?.to_s)}
          - if @occurrence.hasImage?
            %i.fas.fa-image.ml-1.text-muted{"data-toggle":"popover", "data-gbifid":"#{@occurrence.id}"}

  #location.card.mb-4
    .card-header.border-bottom
      %h5= I18n.t('occurrence.location')
    .card-body.mt-2
      %dl.dl-horizontal
        %dt country
        %dd.py-1 #{h(@occurrence.country)}
        %dd.line-break

        %dt countryCode
        %dd.py-1 #{h(@occurrence.countryCode)}
        %dd.line-break

        %dt decimalLatitude
        %dd.py-1 #{h(@occurrence.decimalLatitude)}
        %dd.line-break

        %dt decimalLongitude
        %dd.py-1 #{h(@occurrence.decimalLongitude)}
        %dd.line-break

      - if @occurrence.decimalLongitude && @occurrence.decimalLatitude
        #map-wrapper{style:"height: 100%"}
          #map{style: "width:65%;"}

  #event.card.mb-4
    .card-header.border-bottom
      %h5= I18n.t('occurrence.event')
    .card-body.mt-2
      %dl.dl-horizontal
        %dt eventDate
        %dd.py-1 #{h(@occurrence.eventDate)}
        %dd.line-break

        %dt year
        %dd.py-1 #{h(@occurrence.year)}
        %dd.line-break

        %dt recordedBy
        %dd.py-1 #{h(@occurrence.recordedBy)}
        %dd.line-break

        %dt recordedByID
        %dd.py-1 #{h(@occurrence.recordedByID)}
        %dd.line-break

        - if is_admin?
          %dt Agent Strings
          %dd.py-1.pr-0
            %hr
            .mt-2
              %ul.list-unstyled
                - @occurrence.recorders.each do |agent_recorder|
                  %li.agent_recorders
                    %span
                      #{agent_recorder.fullname}
                    %i.fas.fa-spinner.fa-pulse
          %dd.line-break

        %dt Attributions
        %dd.py-1
          - if @occurrence.user_recordings.count > 0
            %hr
            .mt-2
              - @occurrence.user_recordings.each do |recorder|
                %p.orcid.text-lg-left.p-0.mt-1{"data-user-occurrence-id": "#{recorder.id}", "data-recorders": "#{recorder.user.identifier}", "data-user-id": "#{recorder.user.id}"}
                  - if recorder.user.orcid
                    #{recorder.user.fullname_reverse}
                    %a{href: "https://orcid.org/#{recorder.user.orcid}"}
                      %i.fab.fa-orcid
                      https://orcid.org/#{recorder.user.orcid}
                  - else
                    #{recorder.user.fullname_reverse}
                    %img{src: "/images/wikidata_18x12.svg", alt:"Wikidata iD"}
                    = link_to "https://www.wikidata.org/wiki/#{recorder.user.wikidata}", "https://www.wikidata.org/wiki/#{recorder.user.wikidata}"
                  %span.d-block.ml-3.text-muted.small
                    - if recorder.claimant != recorder.user && !recorder.claimant.is_bot?
                      Attributed by: #{recorder.claimant.fullname_reverse}
                      %a{href: "https://orcid.org/#{recorder.claimant.orcid}"}
                        %i.fab.fa-orcid
                        https://orcid.org/#{recorder.claimant.orcid}
                    - elsif recorder.claimant == recorder.user && !recorder.claimant.is_bot?
                      Claimed by: #{recorder.claimant.fullname_reverse}
                      %a{href: "https://orcid.org/#{recorder.claimant.orcid}"}
                        %i.fab.fa-orcid
                        https://orcid.org/#{recorder.claimant.orcid}
                    - elsif recorder.claimant.is_bot?
                      Attributed by: Bionomia Bot or from source
                  %span.d-block.ml-3.text-muted.small
                    - if recorder.claimant != recorder.user && !recorder.claimant.is_bot?
                      Attributed on: #{recorder.updated || recorder.created}
                    - elsif recorder.claimant == recorder.user && !recorder.claimant.is_bot?
                      Claimed on: #{recorder.updated || recorder.created}
                    - elsif recorder.claimant.is_bot?
                      Attributed or refreshed on: #{recorder.updated || recorder.created}

        %dd.line-break

  #identification.card.mb-4
    .card-header.border-bottom
      %h5= I18n.t('occurrence.identification')
    .card-body.mt-2
      %dl.dl-horizontal
        %dt family
        %dd.py-1 #{h(@occurrence.family)}
        %dd.line-break

        %dt scientificName
        %dd.py-1 #{h(@occurrence.scientificName)}
        %dd.line-break

        %dt typeStatus
        %dd.py-1 #{h(@occurrence.typeStatus)}
        %dd.line-break

        %dt dateIdentified
        %dd.py-1 #{h(@occurrence.dateIdentified)}
        %dd.line-break

        %dt identifiedBy
        %dd.py-1 #{h(@occurrence.identifiedBy)}
        %dd.line-break

        %dt identifiedByID
        %dd.py-1 #{h(@occurrence.identifiedByID)}
        %dd.line-break

        - if is_admin?
          %dt Agent Strings
          %dd.py-1.pr-0
            %hr
            .mt-2
              %ul.list-unstyled
                - @occurrence.determiners.each do |agent_determiner|
                  %li.agent_determiners
                    %span
                      #{agent_determiner.fullname}
                    %i.fas.fa-spinner.fa-pulse
          %dd.line-break

        %dt Attributions
        %dd.py-1
          - if @occurrence.user_identifications.count > 0
            %hr
            .mt-2
              - @occurrence.user_identifications.each do |determiner|
                %p.orcid.text-lg-left.p-0.mt-1{"data-user-occurrence-id": "#{determiner.id}", "data-determiners": "#{determiner.user.identifier}", "data-user-id": "#{determiner.user.id  }"}
                  - if determiner.user.orcid
                    #{determiner.user.fullname_reverse}
                    %a{href: "https://orcid.org/#{determiner.user.orcid}"}
                      %i.fab.fa-orcid
                      https://orcid.org/#{determiner.user.orcid}
                  - else
                    #{determiner.user.fullname_reverse}
                    %img{src: "/images/wikidata_18x12.svg", alt:"Wikidata iD"}
                    = link_to "https://www.wikidata.org/wiki/#{determiner.user.wikidata}", "https://www.wikidata.org/wiki/#{determiner.user.wikidata}"
                  %span.d-block.ml-3.text-muted.small
                    - if determiner.claimant != determiner.user && !determiner.claimant.is_bot?
                      Attributed by: #{determiner.claimant.fullname_reverse}
                      %a{href: "https://orcid.org/#{determiner.claimant.orcid}"}
                        %i.fab.fa-orcid
                        https://orcid.org/#{determiner.claimant.orcid}
                    - elsif determiner.claimant == determiner.user && !determiner.claimant.is_bot?
                      Claimed by: #{determiner.claimant.fullname_reverse}
                      %a{href: "https://orcid.org/#{determiner.claimant.orcid}"}
                        %i.fab.fa-orcid
                        https://orcid.org/#{determiner.claimant.orcid}
                    - elsif determiner.claimant.is_bot?
                      Attributed by: Bionomia Bot or from source
                  %span.d-block.ml-3.text-muted.small
                    - if determiner.claimant != determiner.user && !determiner.claimant.is_bot?
                      Attributed on: #{determiner.updated || determiner.created}
                    - elsif determiner.claimant == determiner.user && !determiner.claimant.is_bot?
                      Claimed on: #{determiner.updated || determiner.created}
                    - elsif determiner.claimant.is_bot?
                      Attributed or refreshed on: #{determiner.updated || determiner.created}
        %dd.line-break

%script{id: "selector-template", type: "text/x-handlebars-template"}
  = haml :'partials/single_selector_template', layout: false, locals: { occurrence: @occurrence }
