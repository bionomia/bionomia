- content_for :scripts do
  %script{src: "/js/jquery.collapser.min.js"}
  :javascript
    $(function() {
      $('.truncate').show().collapser({
        mode: 'lines',
        truncate: 4,
        showText: '[Show more...]',
        hideText: '[Hide]'
      });
    });

.col-12.col-lg-4.text-center.sidebar
  #image-alert.alert.alert-danger.alert-dismissible.fade.mt-0{"data-dismiss":"alert", role:"alert"}
    = I18n.t('profile.upload_error')
    %button.close{type:"button", "data-dismis":"alert", "aria-label":"Close"}
      %span{"aria-hidden":"true"} &times;
  %form#form-wrapper.form{method: :post, action: "/", enctype: "multipart/form-data", "accept-charset": "UTF-8"}
    - bg_class = @user.image_url ? "" : "profile-image-bg"
    #profile-image{class:"image-placeholder mx-auto d-block align-self-center align-items-center #{bg_class}"}
      %img.rounded.mx-auto.d-block.img-fluid.align-top.m-2{src:"#{profile_image(@user)}", alt:"#{@user.fullname}"}
      - if locals[:active_page] == "settings"
        %span
          = link_to I18n.t('profile.change_photo'), "#"
        %ul#profile-upload-option.list-group
          %li.list-group-item.profile-upload-option-list
            %input{name:"user-image", id:"user-image", type:"file", accept:"image/x-png,image/jpeg"}
            %input{type: :hidden, name:"authenticity_token", value:"#{env['rack.session'][:csrf]}"}
            %span= I18n.t('profile.upload')
          %li#profile-remove.list-group-item.profile-upload-option-list= I18n.t('profile.remove')
          %li#profile-cancel.list-group-item.profile-upload-option-list= I18n.t('profile.cancel')

  %h1.h2= @user.fullname

  - if !@user.other_names.blank?
    %p.text-center.text-muted.p-0.mt-1.mb-1 #{@user.other_names.split("|").join("; ")}

  - if !@user.keywords.blank?
    %p.text-center.text-muted.font-italic.pt-0.mt-1.mb-1
      #{@user.keywords.split("|").join(", ")}

  - if !@user.description.nil?
    %p.text-lg-left.p-0.mt-3.mb-1
      #{h(@user.description.truncate(255))}

  %p.orcid.text-lg-left.p-0.mt-3.mb-1
    %a{href: "https://orcid.org/#{@user.orcid}"}
      %i.fab.fa-orcid
      https://orcid.org/#{@user.orcid}

  - if !@user.current_organization.nil?
    %p.text-lg-left.p-0.mt-1.mb-1
      - path = @user.current_organization.identifier
      %i.fas.fa-building
      = succeed "," do
        = link_to @user.current_organization.name, url("/organization/#{path}")
      #{@user.current_organization.address}

  - if !@user.country_code.blank?
    %p.text-lg-left.p-0.mt-1.mb-1
      - country_codes = @user.country_code.split("|") rescue []
      - countries = @user.country.split("|") rescue []
      - countries.each_with_index do |v,i|
        %span.mr-1.text-nowrap
          - if !country_codes[i].nil? && !country_codes[i].empty?
            %i.fas.fa-globe
            = link_to country_name(country_codes[i]), url("/country/#{country_codes[i]}")
          - else
            %i.fas.fa-globe
            #{v}

  - if @user.zenodo_doi
    %p.citation.text-lg-left.mt-3.small
      #{@user.fullname_reverse}. #{DateTime.now.year}. Natural history specimens collected and/or identified and deposited. [Data set]. Zenodo.
      = link_to "https://doi.org/#{@user.zenodo_concept_doi}", "https://doi.org/#{@user.zenodo_concept_doi}"
    %p
      %a{href:"https://doi.org/#{@user.zenodo_concept_doi}"}
        %img{src:"/images/#{@user.zenodo_concept_doi}.svg", alt:"DOI badge"}

  - if @user.youtube_id
    = haml :'youtube', layout: false, locals: { youtube_id: @user.youtube_id }

  .mt-3.pt-3.border-top
    - if !@user.is_public?
      %p.m-3.alert.alert-warning
        %i.fas.fa-lock
        = I18n.t('profile.private_message_html', specimens: link_to(I18n.t('profile.specimens'), url("/profile/candidates")), settings: link_to(I18n.t('profile.settings'), url("/profile/settings")))
    %p.m-0.pl-3.pr-3
      - if @user.is_public?
        %a.mr-2.mb-2.text-nowrap{href: url("/#{@user.orcid}")}
          %i.fas.fa-users
          = I18n.t('profile.public_profile')
      %a.profile-flush.mr-2.mb-2.text-nowrap{href: url("/#{@user.identifier}/refresh-stats.json")}
        %i.fas.fa-sync-alt
        = I18n.t('general.refresh_stats')
      %a.profile-flush.mr-2.mb-2.text-nowrap{href: url("/#{@user.identifier}/refresh.json")}
        %i.fas.fa-sync-alt
        = I18n.t('general.refresh_profile')
        %i.fab.fa-orcid
      - if locals[:active_page] != "settings"
        %a.mb-2.text-nowrap{href: url("/profile/settings")}
          %i.fas.fa-cog
          = I18n.t('profile.settings')
      - else
        %a.mb-2.text-nowrap{href: url("/profile")}
          %i.fas.fa-user
          = I18n.t('profile.overview')

    #flush-message.alert.alert-success.alert-dismissible.fade.show.text-center{role: "alert"}
      = I18n.t("user.caches_rebuilt")
      %button.close{type:"button", "data-dismiss":"alert", "aria-label":"Close"}
        %span{"aria-hidden":"true"} &times;
