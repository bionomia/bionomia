- sort = @sort == "asc" ? "desc" : "asc"
- qry = Rack::Utils.build_nested_query(request.GET.except("order", "sort").merge({sort: sort}))
%th.text-nowrap{scope: "col"}
   %a{href: url(request.path + "?order=scientificName&#{qry}#specimen-list")}
      = I18n.t('specimen.scientific_name')
      = sort_icon("scientificName", sort)
%th.text-nowrap{scope: "col"}
   %a{href: url(request.path + "?order=recordedBy&#{qry}#specimen-list")}
      = I18n.t('specimen.collected_by')
      = sort_icon("recordedBy", sort)
%th.text-nowrap{scope: "col"}
   %a{href: url(request.path + "?order=identifiedBy&#{qry}#specimen-list")}
      = I18n.t('specimen.identified_by')
      = sort_icon("identifiedBy", sort)
%th.text-nowrap{scope: "col"}
   %a{href: url(request.path + "?order=eventDate&#{qry}#specimen-list")}
      = I18n.t('specimen.date_collected')
      = sort_icon("eventDate", sort)
%th.text-nowrap{scope: "col"}
   %a{href: url(request.path + "?order=dateIdentified&#{qry}#specimen-list")}
      = I18n.t('specimen.date_identified')
      = sort_icon("dateIdentified", sort)
%th.text-nowrap{scope: "col"}
   %a{href: url(request.path + "?order=family&#{qry}#specimen-list")}
      = I18n.t('specimen.family')
      = sort_icon("family", sort)
%th.text-nowrap{scope: "col"}
   %a{href: url(request.path + "?order=institutionCode&#{qry}#specimen-list")}
      = I18n.t('specimen.institution')
      = sort_icon("institutionCode", sort)
%th.text-nowrap{scope: "col"}
   %a{href: url(request.path + "?order=catalogNumber&#{qry}#specimen-list")}
      = I18n.t('specimen.catalog_number')
      = sort_icon("catalogNumber", sort)
%th.text-nowrap{scope: "col"}
   %a{href: url(request.path + "?order=typeStatus&#{qry}#specimen-list")}
      = I18n.t('specimen.type_status')
      = sort_icon("typeStatus", sort)
%th.text-nowrap{scope: "col"}
   %a{href: url(request.path + "?order=basisOfRecord&#{qry}#specimen-list")}
      = I18n.t('specimen.basis_record')
      = sort_icon("basisOfRecord", sort)