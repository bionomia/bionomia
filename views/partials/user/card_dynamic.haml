.card.card-profile.my-3
  - if locals[:user].image_url
    .card-header.d-flex
      %div
        %img.card-img-profile.mr-2{src:"#{profile_image(locals[:user], 'medium')}", alt:"#{locals[:user].viewname}", width:48, height:48, loading:"lazy"}
      .flex-grow-1
        %h5
          // Do not use url method here because caching breaks language-based subdomains
          = link_to locals[:user].viewname, "#{locals[:path]}/#{locals[:user].identifier}"
        - if locals[:user].wikidata
          %p.small.text-muted.mt-0.mb-0= format_lifespan(locals[:user])
        - if locals[:user].country
          %p.small.text-muted.mt-0.mb-0
            - country_codes = locals[:user].country_code.split("|") rescue []
            - countries = locals[:user].country.split("|") rescue []
            - countries.each_with_index do |v,i|
              = succeed (countries[i+1]) ? '; ' : '' do
                - if !country_codes[i].nil? && !country_codes[i].empty?
                  #{country_name(country_codes[i])}
                - else
                  #{v}
  - else
    .card-header
      %h5
        // Do not use url method here because caching breaks language-based subdomains
        = link_to locals[:user].viewname, "#{locals[:path]}/#{locals[:user].identifier}"
      - if locals[:user].wikidata
        %p.small.text-muted.mt-0.mb-0= format_lifespan(locals[:user])
      - if locals[:user].country
        %p.small.text-muted.mt-0.mb-0
          - country_codes = locals[:user].country_code.split("|") rescue []
          - countries = locals[:user].country.split("|") rescue []
          - countries.each_with_index do |v,i|
            = succeed (countries[i+1]) ? '; ' : '' do
              - if !country_codes[i].nil? && !country_codes[i].empty?
                #{country_name(country_codes[i])}
              - else
                #{v}

  .card-body
  .card-footer.d-flex.flex-wrap.justify-content-between.small
    .text-left.text-muted.mt-1
      - if !locals[:user].is_public?
        %i.fas.fa-lock
      - count = locals[:user].all_occurrences_count
      %span.badge.badge-light #{number_with_delimiter(count)}
      #{I18n.t('card.claimed', count: count)}
    .progress.progress-border.flex-fill.align-self-end.mt-1{style: "max-width:100px;min-width:100px"}
      .progress-bar.bg-info{id:"progress-bar_#{locals[:user].identifier}", role:"progressbar", style:"width: 0%;", "aria-valuenow":"0", "aria-valuemin":"0", "aria-valuemax":"100", "aria-label":"#{I18n.t('user.progress')}"}
